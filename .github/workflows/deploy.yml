name: Deploy

on:
  workflow_dispatch:
  push:
    branches: main
    paths:
    - '**.tf'
    - '.github/workflows/deploy.yml'
  pull_request:
    paths:
    - '**.tf'
    - '.github/workflows/deploy.yml'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TERRAFORM_VERSION: 1.1.3

jobs:
  configure:
    name: Configure
    runs-on: ubuntu-latest
    timeout-minutes: 1

  # Checks if the terraform will work
  plan:
    name: Plan
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        environment: [dev, prod]
      fail-fast: false
    environment: ${{ matrix.environment }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init -backend-config=access_key="${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config=secret_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false
        working-directory: terraform/environments/${{ matrix.environment }}

  # Applies the terraform
  apply:
    name: Apply
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        environment: [dev, prod]
      fail-fast: false
    environment: ${{ matrix.environment }}
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init -backend-config=access_key="${{ secrets.AWS_ACCESS_KEY_ID }}" -backend-config=secret_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Apply
        run: terraform apply -input=false
        working-directory: terraform/environments/${{ matrix.environment }}