
name: Deploy

on:
  push:
    branches: [main]  
    paths:
    - '**.tf'
    - '.github/workflows/deploy.yml'
  pull_request:
    paths:
    - '**.tf'
    - '.github/workflows/deploy.yml'
  create:
    branches: 
      - release/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SESSION_ID: ${{ secrets.AWS_SESSION_ID }}
  TERRAFORM_VERSION: 1.1.3

jobs:
  plan:
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 5
    strategy:
        matrix:
            environment: [dev, prod]
        fail-fast: true
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Format (dev)
        run: terraform fmt -check
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: terraform/environments/${{ matrix.environment }}

#  deploy:
#    runs-on: ubuntu-latest
#    environment: prod
#    timeout-minutes: 5
#    if: ${{ contains(github.ref, 'refs/heads/release/') }}
#
#    steps:
#      - name: Terraform Format (prod)
#        run: terraform fmt -check
#        working-directory: terraform/environments/prod
