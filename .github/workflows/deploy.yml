name: Deploy

on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths:
      - '**.tf'
      - '.github/workflows/deploy.yml'
  pull_request:
    paths:
      - '**.tf'
      - '.github/workflows/deploy.yml'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TERRAFORM_VERSION: 1.1.3
  PLAN_DIR: "${{ github.workspace }}"

jobs:
  # Generates a plan for review on a PR
  review:
    name: Review
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: review
    strategy:
      matrix:
        environment: [dev, prod]
      fail-fast: false
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false
        working-directory: terraform/environments/${{ matrix.environment }}

  # Generates a plan in preparation for application
  plan:
    name: Plan
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: review
    strategy:
      fail-fast: false
      matrix:
        environment: [dev, prod]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Terraform Plan
        run: terraform plan -input=false -lock=false -out="${{ env.PLAN_DIR }}/${{ matrix.environment }}.plan"
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Store Plan
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.environment }}_plan
          path: "${{ env.PLAN_DIR }}/${{ matrix.environment }}.plan"
          retention-days: 1
          if-no-files-found: error


  # Applies the terraform
  apply:
    name: Apply
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        environment: [dev, prod]
      fail-fast: false
    environment: ${{ matrix.environment }}
    needs:
      - plan
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/environments/${{ matrix.environment }}

      - name: Restore Plan
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.environment }}_plan

      - name: Terraform Apply
        run: terraform apply -input=false "${{ env.PLAN_DIR }}/${{ matrix.environment }}.plan"
        working-directory: terraform/environments/${{ matrix.environment }}